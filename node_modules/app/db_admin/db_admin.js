const mysql = require('mysql');
const setup = require('./config');

const connection = mysql.createConnection({
	host: setup.DB_HOST,
	port: setup.DB_PORT,
	user: setup.DB_USER,
	password: setup.DB_PWD
});

connection.connect((err) => {
	if (err) throw err;
	console.log("connected");
});

const perform = function(query, callback) {

	connection.query(query, (err, res, fields) => {
		if (err) throw err;
		callback(res);
	});
}

//this function is separate now because the connection does't require a tableName - could handled with an object?
exports.createDB = function(dbName, callback) {

	connection.query("CREATE DATABASE " + dbName, (err, res) => {
		if (err) throw err;
		
		callback({
			res: res,
			success: true
		});
	});

}

exports.listDBs = function(callback) {
	//SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE'
	connection.query("SHOW SCHEMAS", (err, res) => {
		if (err) throw err;
		
		callback({
			res: res,
			success: true
		});
	});

}

exports.listTables = function(dbName, callback) {
	//SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE'
	connection.query("SHOW TABLES FROM " + dbName, (err, res) => {
		if (err) throw err;
		
		callback({
			res: res,
			success: true
		});
	});

}
